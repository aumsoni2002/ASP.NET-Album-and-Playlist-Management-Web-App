@{
    ViewBag.Title = "Home Page";
}

<main>
    <section class="row" aria-labelledby="appTitle">
        <h1 id="appTitle">Assignment 3 - Aum Soni</h1>
        <p class="lead">This application is a web-based system created that allows users to view and manage lists of Album, MediaType, Track, and Playlist objects, including adding new Track objects and editing Playlist objects with many-to-many associations.</p>
    </section>

    <div class="row mt-5">
        <section class="col-md-6" aria-labelledby="whatILearned">
            <h2 id="whatILearned">I learned ...</h2>
            <p>
                while working on this assignment, I learned how to use Bootstrap to enhance the appearance of the web app, including customizing styles and layouts. I also discovered how to preselect options in dropdown lists and radio button groups, improving the user experience. Additionally, I gained experience in using SelectList and MultiSelect elements to manage selections and populate forms with data. Furthermore, I delved into the concept of many-to-many associations, a fundamental database relationship, which was essential in editing Playlist objects with multiple associated Track objects.
            </p>
        </section>
        <section class="col-md-6" aria-labelledby="whatIStruggledWith">
            <h2 id="whatIStruggledWith">I struggled with ...</h2>
            <p>
                While working on this assignment, I encountered a few challenges that posed difficulties for me. Firstly, figuring out how to implement the MultiSelect functionality in the Playlist Edit section was a bit tricky. Managing the selection of multiple tracks and their association with the playlist required careful handling. Additionally, creating a SelectList for Tracks in the Track Create view was also challenging, as it involved configuring the dropdown list to display the available options correctly. Another issue I faced was writing the controller for the Playlist entity. Understanding the flow of data between the views and the controller, especially in the context of editing playlists, was a bit complex.
            </p>
        </section>
    </div>
</main>